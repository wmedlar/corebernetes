- hosts: localhost
  gather_facts: false
  tasks:
  - include: tasks/x509/authority.yaml
    loop:
    - http
    - etcd
    loop_control:
      loop_var: name

- hosts: corebernetes
  gather_facts: false
  tasks:
  - include: tasks/install-python.yaml

- import_playbook: certificates.yaml

- hosts: corebernetes
  gather_facts: false
  vars:
    ct_version: v0.9.0
  tasks:
  - name: install ct
    get_url:
      url: "https://github.com/coreos/container-linux-config-transpiler/releases/download/{{ ct_version }}/ct-{{ ct_version }}-x86_64-unknown-linux-gnu"
      dest: ./ct
      mode: 0555

  - name: upload ct config
    template:
      src: templates/containerlinux.yaml.j2
      dest: containerlinux.yaml
      validate: ./ct -in-file %s --files-dir "{{ certificate_directory }}" --files-dir "{{ private_key_directory }}" # ensure our configuration is well-formed

  - name: render ignition config
    shell: ./ct -in-file containerlinux.yaml --files-dir "{{ certificate_directory }}" --files-dir "{{ private_key_directory }}" > ignition.json
    # don't specify creates, otherwise ansible won't run this step at all if ignition.json exists
    # meaning ansible won't pick up changes to containerlinux.yaml
    # args:
    #   creates: ignition.json

  # we choose raw instead of shell or command as these steps must be run outside the docker container
  - name: install coreos
    become: true
    raw: coreos-install -d /dev/sda -i ignition.json -C beta

  - name: reboot to coreos
    become: true
    raw: reboot
