#jinja2: lstrip_blocks: "true", trim_blocks: "true"
{% set certificates = {} %}
{% do certificates.update(etcd=["peer"]) %}
{% do certificates.update(http=["etcd"]) %}

etcd:
  name: "{{ inventory_hostname }}"
  version: 3.3.12
  strict_reconfig_check: true

  advertise_client_urls: "https://{{ ansible_host }}:2379"
  initial_advertise_peer_urls: "https://{{ ansible_host }}:2380"
  initial_cluster: "{{ '%s=https://%s:2380' | format(inventory_hostname, ansible_host) }}"

  listen_client_urls: https://0.0.0.0:2379
  listen_peer_urls: https://0.0.0.0:2380
  listen_metrics_urls: https://0.0.0.0:2381

  cert_file: "{{ certificate_directory }}/http/etcd.crt"
  key_file: "{{ certificate_directory }}/http/etcd.key"

  client_cert_auth: true
  trusted_ca_file: "{{ certificate_directory }}/etcd/ca.crt"

  peer_client_cert_auth: true
  peer_trusted_ca_file: "{{ certificate_directory }}/etcd/ca.crt"
  peer_cert_file: "{{ certificate_directory }}/etcd/peer.crt"
  peer_key_file: "{{ certificate_directory }}/etcd/peer.key"

passwd:
  users:
  # etcd user must be created here to reference it by name in .storage.files
  - name: etcd
    no_create_home: true
    shell: /sbin/nologin

storage:
  files:
  # certificate authorities
  {% for ca in certificates.keys() %}
  - filesystem: root
    contents:
      local: "{{ certificate_directory }}/{{ ca }}/ca.crt"
    mode: 0644
    path: "{{ certificate_directory }}/{{ ca }}/ca.crt"
    user:
      name: etcd
  {% endfor %}

systemd:
  units:
  - name: etcd-member.service
    dropins:
    - name: 10-corebernetes-certs.conf
      contents: |
        [Service]
        Environment=RKT_RUN_ARGS="--volume corebernetes-certs,kind=host,source={{ certificate_directory }},readOnly=true \
        --mount volume=corebernetes-certs,target={{ certificate_directory }}"
