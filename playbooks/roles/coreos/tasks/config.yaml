# generates an ignition.json from the included container linux config fragments

- name: install tools
  get_url:
    url: "{{ item.url }}"
    dest: /opt/bin/{{ item.name }}
    mode: 0755
  loop:
  - name: ct
    url: "https://github.com/coreos/container-linux-config-transpiler/releases/download/v{{ coreos_ct_version }}/ct-v{{ coreos_ct_version }}-x86_64-unknown-linux-gnu"
  - name: yq
    url: "https://github.com/mikefarah/yq/releases/download/{{ coreos_yq_version }}/yq_linux_amd64"

- name: create certificate directory
  file:
    path: /etc/corebernetes/fragments
    state: directory

- name: render fragments
  template:
    src: "{{ item }}.yaml.j2"
    dest: "/etc/corebernetes/fragments/{{ item }}.yaml"
  loop:
  - disks
  - etcd
  - misc

- name: combine fragments
  shell: /opt/bin/yq merge --append /etc/corebernetes/fragments/*.yaml > /etc/corebernetes/containerlinux.yaml
  # don't specify creates, otherwise ansible won't run this step at all if containerlinux.yaml exists
  # meaning ansible won't pick up changes to our fragments if this is run multiple times on a host
  # args:
  #   creates: /etc/corebernetes/containerlinux.yaml

- name: render ignition config
  shell: >
    /opt/bin/ct --files-dir=/
    --in-file=/etc/corebernetes/containerlinux.yaml
    --out-file=/etc/corebernetes/ignition.json
  # again don't specify creates for the same reasons as above
  # args:
  #   creates: /etc/corebernetes/ignition.json
